name: Go CI/CD Pipeline For Blog App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod tidy

    - name: Build Go app
      run: go build -v -o main ./main.go


    - name: Run tests (optional)
      run: go test ./...

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/blog-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/blog-app:latest

  # Optional: Deploy to EC2 using SSH
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker

  #   steps:
  #   - name: Deploy to EC2
  #     uses: appleboy/ssh-action@v1.0.0
  #     with:
  #       host: ${{ secrets.EC2_HOST }}
  #       username: ${{ secrets.EC2_USER }}
  #       key: ${{ secrets.EC2_KEY }}
  #       script: |
  #         docker pull ${{ secrets.DOCKER_USERNAME }}/blog-app:latest
  #         docker stop blog-app || true && docker rm blog-app || true
  #         docker run -d --name blog-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/blog-app:latest
